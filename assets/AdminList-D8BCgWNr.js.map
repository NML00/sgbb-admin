{"version":3,"file":"AdminList-D8BCgWNr.js","sources":["../../src/components/CreateAdminDialog.vue","../../src/views/dashboard/AdminList.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger\n} from './ui/dialog'\nimport { useForm } from 'vee-validate'\nimport { toTypedSchema } from '@vee-validate/zod'\nimport * as z from 'zod'\nimport { FormControl, FormField, FormLabel, FormItem, FormMessage } from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Button } from '@/components/ui/button'\nimport { useMyFetch } from '@/config/fetch'\nimport { ref } from 'vue'\n\nconst formSchema = toTypedSchema(\n  z\n    .object({\n      password: z.string().min(6),\n      confirmPassword: z.string().min(6),\n      email: z.string().email()\n    })\n    .superRefine(({ confirmPassword, password }, ctx) => {\n      if (confirmPassword !== password) {\n        ctx.addIssue({\n          code: 'custom',\n          message: 'The passwords did not match',\n          path: ['confirmPassword']\n        })\n      }\n    })\n)\nconst form = useForm({\n  validationSchema: formSchema\n})\nconst onSubmit = form.handleSubmit(async (val) => {\n  const { password, email } = val\n  const { data } = await useMyFetch('auth/create').post({ password, email }).json()\n  if (data.value) {\n    open.value = true;\n  }\n})\nconst open = ref(false)\n</script>\n\n<template>\n  <Dialog v-model:open=\"open\">\n    <DialogTrigger>\n      <button class=\"p-1 leading-4 rounded-full hover:bg-secondary\">\n        <Icon name=\"Plus\" size=\"36\" />\n      </button>\n    </DialogTrigger>\n    <DialogContent class=\"bg-secondary rounded\">\n      <DialogHeader>\n        <DialogTitle>Create Admin</DialogTitle>\n        <DialogDescription> Create a new admin with email and password </DialogDescription>\n      </DialogHeader>\n      <div>\n        <form @submit=\"onSubmit\">\n          <FormField v-slot=\"{ componentField }\" name=\"email\">\n            <FormItem class=\"mb-4\">\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input\n                  type=\"text\"\n                  autocomplete=\"email\"\n                  placeholder=\"example@mail.com\"\n                  v-bind=\"componentField\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          </FormField>\n          <FormField v-slot=\"{ componentField }\" name=\"password\">\n            <FormItem>\n              <FormLabel>Password</FormLabel>\n              <FormControl>\n                <Input type=\"password\" autocomplete=\"new-password\" v-bind=\"componentField\" />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          </FormField>\n          <FormField v-slot=\"{ componentField }\" name=\"confirmPassword\">\n            <FormItem>\n              <FormLabel>Confirm Password</FormLabel>\n              <FormControl>\n                <Input type=\"password\" autocomplete=\"new-password\" v-bind=\"componentField\" />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          </FormField>\n          <!-- <div class=\"flex items-center space-x-2 my-4\">\n            <Checkbox id=\"terms\" />\n            <Label for=\"terms\">Remember Me</Label>\n          </div> -->\n          <Button class=\"w-full mt-4\" type=\"submit\">Login</Button>\n        </form>\n      </div>\n    </DialogContent>\n  </Dialog>\n</template>\n","<script setup lang=\"ts\">\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription } from '@/components/ui/card'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport { computed } from 'vue'\nimport { useMyFetch, type ListData, type Response } from '@/config/fetch'\nimport CreateAdminDialog from '@/components/CreateAdminDialog.vue'\n\n// ['read', 'edit', 'write', 'delete', 'super']\nexport type Admin = {\n  email: string\n  password: string\n  isLocked: boolean\n  roles: Array<string>\n  createdAt: string\n  id: string\n}\n\nconst url = '/manager/list'\nconst fullAPIURL = computed(() => {\n  return url\n})\n\nconst { data } = useMyFetch(fullAPIURL).json<Response<ListData<Admin>>>()\nconst adminList = computed(() => {\n  return data.value?.status === 200 && data.value.metaData ? data.value.metaData : undefined\n})\n</script>\n<template>\n  <div>\n    <page-header title=\"Quản lý Admin\"> </page-header>\n\n    <div class=\"grid grid-cols-12\">\n      <Card class=\"col-span-7\">\n        <CardHeader>\n          <CardTitle>\n            <div class=\"flex gap-2 justify-between\">\n                Danh sách Admin\n                <CreateAdminDialog></CreateAdminDialog>\n            </div>\n          </CardTitle>\n        </CardHeader>\n        <CardContent class=\"pl-2\">\n          <div class=\"mt-4\" v-if=\"adminList\">\n            <div\n              class=\"flex items-center bg-muted p-1\"\n              v-for=\"admin in adminList.results\"\n              :key=\"`admin${admin.id}`\"\n            >\n              <Avatar class=\"h-9 w-9\">\n                <AvatarImage src=\"/avatars/01.png\" alt=\"Avatar\" />\n                <AvatarFallback>Admin</AvatarFallback>\n              </Avatar>\n              <div class=\"ml-4 space-y-1\">\n                <p class=\"text-sm font-medium leading-none\">{{ admin.email }} </p>\n                <p class=\"text-sm text-muted-foreground uppercase\">{{ admin.roles }}</p>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  </div>\n</template>\n"],"names":["formSchema","toTypedSchema","z.object","z.string","confirmPassword","password","ctx","onSubmit","useForm","val","email","data","useMyFetch","open","ref","url","fullAPIURL","computed","adminList","_a"],"mappings":"4tBAkBA,MAAMA,EAAaC,EACjBC,EACU,CACN,SAAUC,EAAS,EAAE,IAAI,CAAC,EAC1B,gBAAiBA,EAAS,EAAE,IAAI,CAAC,EACjC,MAAOA,EAAS,EAAE,MAAM,CAAA,CACzB,EACA,YAAY,CAAC,CAAE,gBAAAC,EAAiB,SAAAC,CAAA,EAAYC,IAAQ,CAC/CF,IAAoBC,GACtBC,EAAI,SAAS,CACX,KAAM,SACN,QAAS,8BACT,KAAM,CAAC,iBAAiB,CAAA,CACzB,CAEJ,CAAA,CACL,EAIMC,EAHOC,EAAQ,CACnB,iBAAkBR,CAAA,CACnB,EACqB,aAAa,MAAOS,GAAQ,CAC1C,KAAA,CAAE,SAAAJ,EAAU,MAAAK,CAAA,EAAUD,EACtB,CAAE,KAAAE,CAAA,EAAS,MAAMC,EAAW,aAAa,EAAE,KAAK,CAAE,SAAAP,EAAU,MAAAK,CAAO,CAAA,EAAE,KAAK,EAC5EC,EAAK,QACPE,EAAK,MAAQ,GACf,CACD,EACKA,EAAOC,EAAI,EAAK,yvDC5BhBC,GAAM,kDACN,MAAAC,EAAaC,EAAS,IACnBF,EACR,EAEK,CAAE,KAAAJ,CAAK,EAAIC,EAAWI,CAAU,EAAE,KAAgC,EAClEE,EAAYD,EAAS,IAAM,OACxB,QAAAE,EAAAR,EAAK,QAAL,YAAAQ,EAAY,UAAW,KAAOR,EAAK,MAAM,SAAWA,EAAK,MAAM,SAAW,MAAA,CAClF"}
{"version":3,"file":"MoneyOrderDeposit-EM0koxJr.js","sources":["../../src/components/ui/table/TableCaption.vue","../../src/components/money/DepositTable.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <caption :class=\"cn('mt-4 text-sm text-muted-foreground', props.class)\">\n    <slot />\n  </caption>\n</template>\n","<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow\n} from '@/components/ui/table'\n\nimport {\n  Pagination,\n  PaginationEllipsis,\n  PaginationList,\n  PaginationListItem,\n  PaginationNext,\n  PaginationPrev\n} from '@/components/ui/pagination'\n\nimport { computed, ref } from 'vue'\nimport { formateDate, truncateNumber } from '@/lib/utils'\nimport { useAuthStore } from '@/stores/auth'\nimport { useMyFetch, type ListData, type Response } from '@/config/fetch'\nimport type { BalanceOrder } from '@/stores/balance'\nimport { Card, CardContent, CardTitle } from '../ui/card'\nimport CardHeader from '../ui/card/CardHeader.vue'\nimport { Button } from '../ui/button'\nimport VerifyOrderModal from './VerifyOrderModal.vue'\nimport { Input } from '../ui/input'\nimport UserEncapsulation from '../UserEncapsulation.vue'\n\nconst balanceParams = ref({\n  page: 1,\n  limit: 10,\n  type: 'deposit',\n  sortBy: 'status:asc',\n  status: 'Pending',\n  userId: ''\n})\nconst apiRoute = 'balance'\nconst fullApiRoute = computed(() => {\n  const query = new URLSearchParams(balanceParams.value as any)\n  const delKeys: Array<string> = []\n  query.forEach((value, key) => {\n    if (value === undefined || value === 'undefined' || value === '') {\n      delKeys.push(key)\n    }\n  })\n  delKeys.forEach((el) => {\n    query.delete(el)\n  })\n\n  return `${apiRoute}?${query.toString()}`\n})\n\nconst { data, isFetching: pending } = useMyFetch(fullApiRoute, { refetch: true }).json<\n  Response<ListData<BalanceOrder>>\n>()\nconst depositList = computed(() => {\n  return data.value?.metaData\n})\n</script>\n\n<template>\n  <Card class=\"\">\n    <CardHeader>\n      <CardTitle> Lệnh nạp (Deposit) </CardTitle>\n      <div class=\"flex justify-end flex-wrap gap-2 items-center\">\n        <label>\n          <input\n            v-model=\"balanceParams.status\"\n            type=\"radio\"\n            name=\"status\"\n            class=\"absolute opacity-0 w-0 h-0 cursor-pointer peer\"\n            value=\"Pending\"\n          />\n          <span\n            class=\"py-1 px-2 border border-1 border-foreground rounded cursor-pointer peer-checked:bg-foreground peer-checked:text-secondary font-semibold\"\n          >\n            Chưa duyệt\n          </span>\n        </label>\n        <label>\n          <input\n            v-model=\"balanceParams.status\"\n            type=\"radio\"\n            name=\"status\"\n            class=\"absolute opacity-0 w-0 h-0 cursor-pointer peer\"\n            value=\"Success\"\n          />\n          <span\n            class=\"py-1 px-2 border border-1 border-foreground rounded cursor-pointer peer-checked:bg-foreground peer-checked:text-secondary font-semibold\"\n          >\n            Đã duyệt\n          </span>\n        </label>\n        <label>\n          <input\n            v-model=\"balanceParams.status\"\n            type=\"radio\"\n            name=\"status\"\n            class=\"absolute opacity-0 w-0 h-0 cursor-pointer peer\"\n            :value=\"undefined\"\n          />\n          <span\n            class=\"py-1 px-2 border border-1 border-foreground rounded cursor-pointer peer-checked:bg-foreground peer-checked:text-secondary font-semibold\"\n          >\n            Tất cả\n          </span>\n        </label>\n        <label>\n          <Input prepend-icon=\"User\" v-model=\"balanceParams.userId\" class=\"py-1\" placeholder=\"ID người dùng\" type=\"text\" />\n        </label>\n      </div>\n    </CardHeader>\n    <CardContent>\n      <div class=\"mt-4\">\n        <div class=\"border rounded\">\n          <Table class=\"\" :loading=\"pending\">\n            <TableCaption>\n              <div>Đây là các lệnh nạp trong hệ thống</div>\n            </TableCaption>\n            <TableHeader>\n              <TableRow>\n                <TableHead>\n                  <div>ID /</div>\n                  <div>Chi tiết</div>\n                </TableHead>\n                <TableHead>Số tiền</TableHead>\n                <TableHead>Mã giao dịch</TableHead>\n                <TableHead>Trạng thái</TableHead>\n                <TableHead class=\"text-right\"> Ngày tạo lệnh </TableHead>\n                <TableHead class=\"text-center\"> Action </TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody v-if=\"depositList\">\n              <TableRow\n                v-for=\"entry in depositList?.results\"\n                :key=\"entry.id\"\n                class=\"odd:bg-(--color-background-mute)\"\n              >\n                <TableCell>\n                  <div class=\" font-bold\">\n                    <UserEncapsulation :user-id=\"entry.userId\" />\n                  </div>\n                  <div :title=\"entry.comment\">\n                    {{ entry.comment }}\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div class=\"font-bold text-(--vt-c-white-soft)\">\n                    {{ truncateNumber(entry.amount_vnd) }} VNĐ\n                  </div>\n                  <div class=\"font-bold text-(--vt-c-white-soft)\">\n                    {{ truncateNumber(entry.amount) }} Diamonds\n                  </div>\n                </TableCell>\n                <TableCell class=\"break-words max-w-[100px]\">\n                  {{ entry.transaction }}\n                </TableCell>\n                <TableCell class=\"uppercase font-bold\">\n                  {{ entry.status }}\n                </TableCell>\n                <TableCell class=\"text-right\">\n                  {{ formateDate(entry.createdAt) }}\n                </TableCell>\n                <TableCell class=\"text-center\">\n                  <VerifyOrderModal v-if=\"entry.status === 'Pending'\" :order=\"entry\">\n                    <Button prepend-icon=\"Check\" class=\"px-2 py-1\"> Duyệt lệnh </Button>\n                  </VerifyOrderModal>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </div>\n        <Pagination\n          v-if=\"depositList\"\n          class=\"mt-4\"\n          v-slot=\"{ page }\"\n          :items-per-page=\"depositList.limit\"\n          :total=\"depositList.totalResults\"\n          show-edges\n          v-model:page=\"balanceParams.page\"\n          :disabled=\"pending\"\n        >\n          <PaginationList v-slot=\"{ items }\" class=\"flex items-center gap-1\">\n            <PaginationPrev class=\"w-6 h-6\"></PaginationPrev>\n            <template v-for=\"(item, index) in items\">\n              <PaginationListItem\n                v-if=\"item.type === 'page'\"\n                :key=\"index\"\n                :value=\"item.value\"\n                as-child\n              >\n                <button\n                  class=\"w-6 h-6 p-0 hover:bg-primary/50 cursor-pointer rounded\"\n                  :class=\"{\n                    'bg-primary text-primary-foreground': item.value === page\n                  }\"\n                >\n                  {{ item.value }}\n                </button>\n              </PaginationListItem>\n              <PaginationEllipsis v-else :key=\"item.type\" :index=\"index\" />\n            </template>\n            <PaginationNext class=\"w-6 h-6\"></PaginationNext>\n          </PaginationList>\n        </Pagination>\n      </div>\n    </CardContent>\n  </Card>\n</template>\n"],"names":["props","__props","apiRoute","balanceParams","ref","fullApiRoute","computed","query","delKeys","value","key","el","data","pending","useMyFetch","depositList","_a"],"mappings":"gxBAIA,MAAMA,EAAQC,0WCqCRC,GAAW,+CARjB,MAAMC,EAAgBC,EAAI,CACxB,KAAM,EACN,MAAO,GACP,KAAM,UACN,OAAQ,aACR,OAAQ,UACR,OAAQ,EAAA,CACT,EAEKC,EAAeC,EAAS,IAAM,CAClC,MAAMC,EAAQ,IAAI,gBAAgBJ,EAAc,KAAY,EACtDK,EAAyB,CAAC,EAC1B,OAAAD,EAAA,QAAQ,CAACE,EAAOC,IAAQ,EACxBD,IAAU,QAAaA,IAAU,aAAeA,IAAU,KAC5DD,EAAQ,KAAKE,CAAG,CAClB,CACD,EACOF,EAAA,QAASG,GAAO,CACtBJ,EAAM,OAAOI,CAAE,CAAA,CAChB,EAEM,GAAGT,EAAQ,IAAIK,EAAM,SAAU,CAAA,EAAA,CACvC,EAEK,CAAE,KAAAK,EAAM,WAAYC,GAAYC,EAAWT,EAAc,CAAE,QAAS,EAAM,CAAA,EAAE,KAEhF,EACIU,EAAcT,EAAS,IAAM,OACjC,OAAOU,EAAAJ,EAAK,QAAL,YAAAI,EAAY,QAAA,CACpB"}
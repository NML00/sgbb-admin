{"version":3,"file":"RoomList-B7ZDOmP9.js","sources":["../../src/components/user/ApproveRoom.vue","../../src/components/user/RejectRoom.vue","../../src/components/room/RoomMessageBox.vue","../../src/views/dashboard/user/RoomList.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useMyFetch } from '@/config/fetch'\nimport type { Room } from '@/stores/room'\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger\n} from '@/components/ui/alert-dialog'\nconst props = defineProps<{ room: Room }>()\n\nconst { patch } = useMyFetch(`/rooms/${props.room._id}/approve`, { immediate: false })\nconst emit = defineEmits<{ update: [] }>()\nconst handleclick = async () => {\n  const { data, execute } = patch().json()\n  await execute()\n  if (data.value.status) {\n    emit('update')\n    console.log('Aint nothing but a heartache')\n  }\n}\n</script>\n\n<template>\n  <AlertDialog>\n    <AlertDialogTrigger>\n      <slot />\n    </AlertDialogTrigger>\n    <AlertDialogContent>\n      <AlertDialogHeader>\n        <AlertDialogTitle> Xác nhận yêu cầu Matching </AlertDialogTitle>\n        <AlertDialogDescription>\n          {{ room.name }}\n        </AlertDialogDescription>\n      </AlertDialogHeader>\n      <AlertDialogAction @click=\"handleclick\">Tiếp tục</AlertDialogAction>\n      <AlertDialogCancel>Hủy</AlertDialogCancel>\n    </AlertDialogContent>\n  </AlertDialog>\n</template>\n","<script setup lang=\"ts\">\nimport { useMyFetch } from '@/config/fetch'\nimport type { Room } from '@/stores/room'\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger\n} from '@/components/ui/alert-dialog'\nconst props = defineProps<{ room: Room }>()\n\nconst { patch } = useMyFetch(`/rooms/${props.room._id}/reject`, { immediate: false })\nconst emit = defineEmits<{ update: [] }>()\nconst handleclick = async () => {\n  const { data, execute } = patch().json()\n  await execute()\n  if (data.value.status) {\n    emit('update')\n  }\n}\n</script>\n\n<template>\n  <AlertDialog>\n    <AlertDialogTrigger>\n      <slot />\n    </AlertDialogTrigger>\n    <AlertDialogContent>\n      <AlertDialogHeader>\n        <AlertDialogTitle> Từ chối yêu cầu Matching </AlertDialogTitle>\n        <AlertDialogDescription>\n          {{ room.name }}\n        </AlertDialogDescription>\n      </AlertDialogHeader>\n      <AlertDialogAction @click=\"handleclick\">Tiếp tục</AlertDialogAction>\n      <AlertDialogCancel>Hủy</AlertDialogCancel>\n    </AlertDialogContent>\n  </AlertDialog>\n</template>\n","<script lang=\"ts\" setup>\nimport { useMyFetch, type ListData, type Response } from '@/config/fetch'\nimport type { MinimizeMember, Room } from '@/stores/room'\nimport { computed } from 'vue'\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger\n} from '@/components/ui/dialog'\nimport { Avatar, AvatarFallback, AvatarImage } from '../ui/avatar'\n\nexport type ConversationMessage = {\n  deletedByRole: string | null\n  deletionReason: string | null\n  type: 'T'\n  deletedAt: string | null\n  deletedBy: string | null\n  chatRoomId: string\n  content: string\n  sender: string\n  createdAt: string\n  repliedFrom: string | null\n  forwardedFrom: string | null\n  mentions: {}\n  id: string\n}\nconst props = defineProps<{ room: Room }>()\nconst APIURL = computed(() => {\n  return `messages/${props.room._id}/conversation`\n})\n\nconst { data, execute } = useMyFetch(APIURL, { immediate: false }).json<\n  Response<ListData<ConversationMessage>>\n>()\n\nconst messagesData = computed(() => {\n  return data.value?.metaData\n})\nconst memberDict = computed(() => {\n  const map = new Map<string, MinimizeMember>()\n  props.room.memberDetails.forEach((member) => {\n    map.set(member._id, member)\n  })\n  return map\n})\nconst isNewStreak = (index: number, message: ConversationMessage) => {\n  return (\n    messagesData.value &&\n    (index === 0 ||\n      memberDict.value.get(messagesData.value.results[index - 1].sender) !==\n        memberDict.value.get(message.sender))\n  )\n}\nconst firstMemberID = computed(() => {\n  const member = memberDict.value.entries().next().value\n  if (member) {\n    return member[1]._id\n  }\n  return ''\n})\n</script>\n\n<template>\n  <Dialog>\n    <DialogTrigger>\n      <button @click=\"execute()\">Xem tin nhắn</button>\n    </DialogTrigger>\n    <DialogContent>\n      <DialogHeader>\n        <DialogTitle> </DialogTitle>\n      </DialogHeader>\n      <div>\n        <div class=\"h-[400px] overflow-auto px-2 relative inset-shadow-sm\" v-if=\"messagesData\">\n          <div\n            v-for=\"(message, index) in messagesData?.results\"\n            :key=\"`${index}${message.content}`\"\n            :class=\"{ 'pt-4': isNewStreak(index, message) }\"\n          >\n            <div\n              class=\"flex gap-2 pt-1\"\n              :class=\"{ 'flex-row-reverse': firstMemberID === message.sender }\"\n            >\n              <div class=\"shrink-0 h-10 w-10\">\n                <Avatar\n                  v-if=\"\n                    message.sender && memberDict.get(message.sender) && isNewStreak(index, message)\n                  \"\n                  class=\"self-start\"\n                >\n                  <AvatarImage :src=\"memberDict.get(message.sender)?.avatarPath ?? ''\">\n                  </AvatarImage>\n                  <AvatarFallback> </AvatarFallback>\n                </Avatar>\n              </div>\n              <div class=\"grow bg-muted p-1 rounded\">\n                {{ message.content }}\n              </div>\n              <div class=\"shrink-0 h-10 w-10\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </DialogContent>\n  </Dialog>\n</template>\n","<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow\n} from '@/components/ui/table'\n\nimport {\n  Pagination,\n  PaginationEllipsis,\n  PaginationList,\n  PaginationListItem,\n  PaginationNext,\n  PaginationPrev\n} from '@/components/ui/pagination'\n\nimport { computed, ref } from 'vue'\nimport { formateDate, myDateFormatter, truncateNumber } from '@/lib/utils'\nimport { useAuthStore } from '@/stores/auth'\nimport { useMyFetch, type ListData, type Response } from '@/config/fetch'\nimport type { BalanceOrder } from '@/stores/balance'\nimport type { Room } from '@/stores/room'\nimport ListOfAvatars from '@/components/user/ListOfAvatars.vue'\nimport ApproveRoom from '@/components/user/ApproveRoom.vue'\nimport RejectRoom from '@/components/user/RejectRoom.vue'\nimport RoomMessageBox from '@/components/room/RoomMessageBox.vue'\n\nconst balanceParams = ref({\n  page: 1,\n  limit: 10,\n  userId: ''\n})\nconst apiRoute = '/rooms'\nconst fullApiRoute = computed(() => {\n  const query = new URLSearchParams(balanceParams.value as any)\n  const delKeys: Array<string> = []\n  query.forEach((value, key) => {\n    if (value === undefined || value === 'undefined' || value === '') {\n      delKeys.push(key)\n    }\n  })\n  delKeys.forEach((el) => {\n    query.delete(el)\n  })\n\n  return `${apiRoute}?${query.toString()}`\n})\n\nconst { data, isFetching: pending } = useMyFetch(fullApiRoute, { refetch: true }).json<\n  Response<ListData<Room>>\n>()\nconst roomList = computed(() => {\n  return data.value?.metaData\n})\n</script>\n\n<template>\n  <Card class=\"\">\n    <CardHeader>\n      <CardTitle> Các phòng chat </CardTitle>\n    </CardHeader>\n    <CardContent>\n      <div class=\"mt-4\">\n        <div class=\"border rounded\">\n          <Table class=\"\" :loading=\"pending\">\n            <TableCaption>\n              <div>Đây là các phòng chat trong hệ thống</div>\n            </TableCaption>\n            <TableHeader>\n              <TableRow>\n                <TableHead> Tên phòng </TableHead>\n                <TableHead> Trạng thái xác nhận </TableHead>\n                <TableHead> Ngày tạo </TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody v-if=\"roomList\">\n              <TableRow\n                v-for=\"entry in roomList?.results\"\n                :key=\"entry._id\"\n                class=\"odd:bg-(--color-background-mute)\"\n              >\n                <TableCell>\n                  {{ entry.name }}\n                  <div>\n                    <ListOfAvatars :list=\"entry.memberDetails\" />\n                  </div>\n                  <RoomMessageBox :room=\"entry\" />\n                </TableCell>\n                <TableCell>\n                  <div class=\"flex gap-2\">\n                    {{ entry.isApproved ? 'Đã xác nhận' : 'Chưa xác nhận' }}\n                    <template v-if=\"!entry.isApproved\">\n                      <ApproveRoom :room=\"entry\" class=\"text-primary\">\n                        <Icon name=\"Check\" />\n                      </ApproveRoom>\n                      <RejectRoom :room=\"entry\">\n                        <Icon class=\"text-destructive\" name=\"X\" />\n                      </RejectRoom>\n                    </template>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  {{ myDateFormatter.format(new Date(entry.createdAt)) }}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </div>\n        <Pagination\n          v-if=\"roomList\"\n          class=\"mt-4\"\n          v-slot=\"{ page }\"\n          :items-per-page=\"roomList.limit\"\n          :total=\"roomList.totalResults\"\n          show-edges\n          v-model:page=\"balanceParams.page\"\n          :disabled=\"pending\"\n        >\n          <PaginationList v-slot=\"{ items }\" class=\"flex items-center gap-1\">\n            <PaginationPrev class=\"w-6 h-6\"></PaginationPrev>\n            <template v-for=\"(item, index) in items\">\n              <PaginationListItem\n                v-if=\"item.type === 'page'\"\n                :key=\"index\"\n                :value=\"item.value\"\n                as-child\n              >\n                <button\n                  class=\"w-6 h-6 p-0 hover:bg-primary/50 cursor-pointer rounded\"\n                  :class=\"{\n                    'bg-primary text-primary-foreground': item.value === page\n                  }\"\n                >\n                  {{ item.value }}\n                </button>\n              </PaginationListItem>\n              <PaginationEllipsis v-else :key=\"item.type\" :index=\"index\" />\n            </template>\n            <PaginationNext class=\"w-6 h-6\"></PaginationNext>\n          </PaginationList>\n        </Pagination>\n      </div>\n    </CardContent>\n  </Card>\n</template>\n"],"names":["props","__props","patch","useMyFetch","emit","__emit","handleclick","data","execute","APIURL","computed","messagesData","_a","memberDict","map","member","isNewStreak","index","message","firstMemberID","apiRoute","balanceParams","ref","fullApiRoute","query","delKeys","value","key","el","pending","roomList"],"mappings":"28BAcA,MAAMA,EAAQC,EAER,CAAE,MAAAC,CAAU,EAAAC,EAAW,UAAUH,EAAM,KAAK,GAAG,WAAY,CAAE,UAAW,EAAA,CAAO,EAC/EI,EAAOC,EACPC,EAAc,SAAY,CAC9B,KAAM,CAAE,KAAAC,EAAM,QAAAC,CAAY,EAAAN,EAAA,EAAQ,KAAK,EACvC,MAAMM,EAAQ,EACVD,EAAK,MAAM,SACbH,EAAK,QAAQ,EACb,QAAQ,IAAI,8BAA8B,EAE9C,qhBCXA,MAAMJ,EAAQC,EAER,CAAE,MAAAC,CAAU,EAAAC,EAAW,UAAUH,EAAM,KAAK,GAAG,UAAW,CAAE,UAAW,EAAA,CAAO,EAC9EI,EAAOC,EACPC,EAAc,SAAY,CAC9B,KAAM,CAAE,KAAAC,EAAM,QAAAC,CAAY,EAAAN,EAAA,EAAQ,KAAK,EACvC,MAAMM,EAAQ,EACVD,EAAK,MAAM,QACbH,EAAK,QAAQ,CAEjB,8oBCKA,MAAMJ,EAAQC,EACRQ,EAASC,EAAS,IACf,YAAYV,EAAM,KAAK,GAAG,eAClC,EAEK,CAAE,KAAAO,EAAM,QAAAC,CAAA,EAAYL,EAAWM,EAAQ,CAAE,UAAW,GAAO,EAAE,KAEjE,EAEIE,EAAeD,EAAS,IAAM,OAClC,OAAOE,EAAAL,EAAK,QAAL,YAAAK,EAAY,QAAA,CACpB,EACKC,EAAaH,EAAS,IAAM,CAC1B,MAAAI,MAAU,IAChB,OAAAd,EAAM,KAAK,cAAc,QAASe,GAAW,CACvCD,EAAA,IAAIC,EAAO,IAAKA,CAAM,CAAA,CAC3B,EACMD,CAAA,CACR,EACKE,EAAc,CAACC,EAAeC,IAEhCP,EAAa,QACZM,IAAU,GACTJ,EAAW,MAAM,IAAIF,EAAa,MAAM,QAAQM,EAAQ,CAAC,EAAE,MAAM,IAC/DJ,EAAW,MAAM,IAAIK,EAAQ,MAAM,GAGrCC,EAAgBT,EAAS,IAAM,CACnC,MAAMK,EAASF,EAAW,MAAM,QAAQ,EAAE,OAAO,MACjD,OAAIE,EACKA,EAAO,CAAC,EAAE,IAEZ,EAAA,CACR,g6BCzBKK,GAAW,0CALjB,MAAMC,EAAgBC,GAAI,CACxB,KAAM,EACN,MAAO,GACP,OAAQ,EAAA,CACT,EAEKC,EAAeb,EAAS,IAAM,CAClC,MAAMc,EAAQ,IAAI,gBAAgBH,EAAc,KAAY,EACtDI,EAAyB,CAAC,EAC1B,OAAAD,EAAA,QAAQ,CAACE,EAAOC,IAAQ,EACxBD,IAAU,QAAaA,IAAU,aAAeA,IAAU,KAC5DD,EAAQ,KAAKE,CAAG,CAClB,CACD,EACOF,EAAA,QAASG,GAAO,CACtBJ,EAAM,OAAOI,CAAE,CAAA,CAChB,EAEM,GAAGR,EAAQ,IAAII,EAAM,SAAU,CAAA,EAAA,CACvC,EAEK,CAAE,KAAAjB,EAAM,WAAYsB,GAAY1B,EAAWoB,EAAc,CAAE,QAAS,EAAM,CAAA,EAAE,KAEhF,EACIO,EAAWpB,EAAS,IAAM,OAC9B,OAAOE,EAAAL,EAAK,QAAL,YAAAK,EAAY,QAAA,CACpB"}